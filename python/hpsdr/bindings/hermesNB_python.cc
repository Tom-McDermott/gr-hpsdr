/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(hermesNB.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(c7441c76c11f37615cc264411fb37ce4)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/hpsdr/hermesNB.h>
// pydoc.h is automatically generated in the build directory
#include <hermesNB_pydoc.h>

void bind_hermesNB(py::module& m)
{

    using hermesNB    = ::gr::hpsdr::hermesNB;


    py::class_<hermesNB, gr::block, gr::basic_block,
        std::shared_ptr<hermesNB>>(m, "hermesNB", D(hermesNB))

        .def(py::init(&hermesNB::make),
           py::arg("RxFreq0"),
           py::arg("RxFreq1"),
           py::arg("RxFreq2"),
           py::arg("RxFreq3"),
           py::arg("RxFreq4"),
           py::arg("RxFreq5"),
           py::arg("RxFreq6"),
           py::arg("RxFreq7"),
           py::arg("TxFreq"),
           py::arg("RxPre"),
           py::arg("PTTModeSel"),
           py::arg("PTTTxMute"),
           py::arg("PTTRxMute"),
           py::arg("TxDr"),
           py::arg("RxSmp"),
           py::arg("Intfc"),
           py::arg("ClkS"),
           py::arg("AlexRA"),
           py::arg("AlexTA"),
           py::arg("AlexHPF"),
           py::arg("AlexLPF"),
           py::arg("Verbose"),
           py::arg("NumRx"),
           py::arg("MACAddr"),
           D(hermesNB,make)
        )
        




        
        .def("set_Receive0Frequency",&hermesNB::set_Receive0Frequency,       
            py::arg("arg0"),
            D(hermesNB,set_Receive0Frequency)
        )


        
        .def("set_Receive1Frequency",&hermesNB::set_Receive1Frequency,       
            py::arg("arg0"),
            D(hermesNB,set_Receive1Frequency)
        )


        
        .def("set_Receive2Frequency",&hermesNB::set_Receive2Frequency,       
            py::arg("arg0"),
            D(hermesNB,set_Receive2Frequency)
        )


        
        .def("set_Receive3Frequency",&hermesNB::set_Receive3Frequency,       
            py::arg("arg0"),
            D(hermesNB,set_Receive3Frequency)
        )


        
        .def("set_Receive4Frequency",&hermesNB::set_Receive4Frequency,       
            py::arg("arg0"),
            D(hermesNB,set_Receive4Frequency)
        )


        
        .def("set_Receive5Frequency",&hermesNB::set_Receive5Frequency,       
            py::arg("arg0"),
            D(hermesNB,set_Receive5Frequency)
        )


        
        .def("set_Receive6Frequency",&hermesNB::set_Receive6Frequency,       
            py::arg("arg0"),
            D(hermesNB,set_Receive6Frequency)
        )


        
        .def("set_Receive7Frequency",&hermesNB::set_Receive7Frequency,       
            py::arg("arg0"),
            D(hermesNB,set_Receive7Frequency)
        )


        
        .def("set_TransmitFrequency",&hermesNB::set_TransmitFrequency,       
            py::arg("arg0"),
            D(hermesNB,set_TransmitFrequency)
        )


        
        .def("set_RxSampRate",&hermesNB::set_RxSampRate,       
            py::arg("arg0"),
            D(hermesNB,set_RxSampRate)
        )


        
        .def("set_RxPreamp",&hermesNB::set_RxPreamp,       
            py::arg("arg0"),
            D(hermesNB,set_RxPreamp)
        )


        
        .def("set_PTTMode",&hermesNB::set_PTTMode,       
            py::arg("arg0"),
            D(hermesNB,set_PTTMode)
        )


        
        .def("set_PTTOffMutesTx",&hermesNB::set_PTTOffMutesTx,       
            py::arg("arg0"),
            D(hermesNB,set_PTTOffMutesTx)
        )


        
        .def("set_PTTOnMutesRx",&hermesNB::set_PTTOnMutesRx,       
            py::arg("arg0"),
            D(hermesNB,set_PTTOnMutesRx)
        )


        
        .def("set_TxDrive",&hermesNB::set_TxDrive,       
            py::arg("arg0"),
            D(hermesNB,set_TxDrive)
        )


        
        .def("set_ClockSource",&hermesNB::set_ClockSource,       
            py::arg("arg0"),
            D(hermesNB,set_ClockSource)
        )


        
        .def("set_AlexRxAntenna",&hermesNB::set_AlexRxAntenna,       
            py::arg("arg0"),
            D(hermesNB,set_AlexRxAntenna)
        )


        
        .def("set_AlexTxAntenna",&hermesNB::set_AlexTxAntenna,       
            py::arg("arg0"),
            D(hermesNB,set_AlexTxAntenna)
        )


        
        .def("set_AlexRxHPF",&hermesNB::set_AlexRxHPF,       
            py::arg("arg0"),
            D(hermesNB,set_AlexRxHPF)
        )


        
        .def("set_AlexTxLPF",&hermesNB::set_AlexTxLPF,       
            py::arg("arg0"),
            D(hermesNB,set_AlexTxLPF)
        )


        
        .def("set_Verbose",&hermesNB::set_Verbose,       
            py::arg("arg0"),
            D(hermesNB,set_Verbose)
        )


        
        .def("stop",&hermesNB::stop,       
            D(hermesNB,stop)
        )


        
        .def("start",&hermesNB::start,       
            D(hermesNB,start)
        )

        ;




}








